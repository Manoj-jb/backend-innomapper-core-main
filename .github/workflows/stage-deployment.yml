name: Deploy to Digital Ocean (innowell-stage cluster)

on:
  workflow_dispatch:
  push:
    branches: [ main, stage ]

jobs:
  build-and-deploy:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build Project
        run: mvn clean install -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-south-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 650251715409.dkr.ecr.ap-south-1.amazonaws.com
          IMAGE_TAG: latest
          REPOSITORY: backend-innomapper-core
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "Docker Image Link = $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG"

      # TODO: This kubeconfig is global kubeconfig with access to whole cluster
      # In production refrain from using this and use k8s service account with limited access
      # Each service account has permissions like IAM and each has its own kubeconfig
      # replace global kubeconfig with service account's kubeconfig
      - name: Connect to LKE kubernetes cluster
        id: connect-to-k8s-cluster
        uses: Azure/k8s-set-context@v4.0.0
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.STAGE_KUBECONFIG }}

      - name: Restart deployment
        id: restart-deployment
        env:
          DEPLOYMENT_NAME: backend-innomapper-core
          NAMESPACE: backend-innomapper-core
        run: |
          kubectl rollout restart deployment $DEPLOYMENT_NAME --namespace $NAMESPACE
